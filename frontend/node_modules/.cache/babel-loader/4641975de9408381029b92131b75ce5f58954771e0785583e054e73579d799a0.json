{"ast":null,"code":"var _jsxFileName = \"/Users/mikenkie/WebstormProjects/citylogix/frontend/src/components/RouteDetails.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { fetchRouteStops } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, Typography, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RouteDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [trips, setTrips] = useState([]);\n  useEffect(() => {\n    if (id) {\n      fetchRouteStops(Number(id)).then(res => setTrips(res.data));\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Trips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), trips.map(trip => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Trip #\", trip.tripId, \" | \", new Date(trip.departureTime).toLocaleString(), \" \\u2192 \", new Date(trip.arrivalTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: trip.stops.map(stop => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${stop.stopSequence}. ${stop.stopName}`,\n                secondary: `Arr: ${new Date(stop.arrivalTime).toLocaleTimeString()} | Dep: ${new Date(stop.departureTime).toLocaleTimeString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, stop.stopSequence, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, trip.tripId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(RouteDetails, \"0S/WX/3eEs73ODD6BBw7D+wMBSw=\", false, function () {\n  return [useParams];\n});\n_c = RouteDetails;\nvar _c;\n$RefreshReg$(_c, \"RouteDetails\");","map":{"version":3,"names":["useEffect","useState","fetchRouteStops","useParams","Card","CardContent","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Fragment","_Fragment","RouteDetails","_s","id","trips","setTrips","Number","then","res","data","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","trip","sx","my","tripId","Date","departureTime","toLocaleString","arrivalTime","stops","stop","primary","stopSequence","stopName","secondary","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/mikenkie/WebstormProjects/citylogix/frontend/src/components/RouteDetails.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchRouteStops } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport { Card, CardContent, Typography, List, ListItem, ListItemText } from '@mui/material';\n\ntype Stop = {\n  stopSequence: number;\n  stopId: number;\n  stopName: string;\n  arrivalTime: string;\n  departureTime: string;\n};\n\ntype Trip = {\n  tripId: number;\n  departureTime: string;\n  arrivalTime: string;\n  notes?: string;\n  stops: Stop[];\n};\n\nexport default function RouteDetails() {\n  const { id } = useParams();\n  const [trips, setTrips] = useState<Trip[]>([]);\n\n  useEffect(() => {\n    if (id) {\n      fetchRouteStops(Number(id)).then(res => setTrips(res.data));\n    }\n  }, [id]);\n\n  return (\n    <>\n      <Typography variant=\"h5\">Trips</Typography>\n      {trips.map(trip => (\n        <Card key={trip.tripId} sx={{ my: 2 }}>\n          <CardContent>\n            <Typography variant=\"h6\">\n              Trip #{trip.tripId} | {new Date(trip.departureTime).toLocaleString()} â†’ {new Date(trip.arrivalTime).toLocaleString()}\n            </Typography>\n            <List>\n            <>\n              {trip.stops.map(stop => (\n                <ListItem key={stop.stopSequence}>\n                  <ListItemText\n                    primary={`${stop.stopSequence}. ${stop.stopName}`}\n                    secondary={`Arr: ${new Date(stop.arrivalTime).toLocaleTimeString()} | Dep: ${new Date(stop.departureTime).toLocaleTimeString()}`}\n                  />\n                </ListItem>\n              ))}\n            </>\n            </List>\n\n          </CardContent>\n        </Card>\n      ))}\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}